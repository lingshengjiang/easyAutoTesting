<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hry.mapper.TcustomMapper">
  <resultMap id="BaseResultMap" type="com.hry.po.Tcustom">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="customName" jdbcType="VARCHAR" property="customname" />
    <result column="userId" jdbcType="INTEGER" property="userid" />
    <result column="userName" jdbcType="VARCHAR" property="username" />
    <result column="envId" jdbcType="INTEGER" property="envid" />
    <result column="envKey" jdbcType="VARCHAR" property="envkey" />
    <result column="strategy" jdbcType="VARCHAR" property="strategy" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="updateTime" jdbcType="TIMESTAMP" property="updatetime" />
    <result column="intersect" jdbcType="INTEGER" property="intersect" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, customName, userId, userName, envId, envKey, strategy, status, updateTime, intersect
  </sql>
  <select id="selectByExample" parameterType="com.hry.po.TcustomExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tcustom
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tcustom
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tcustom
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.hry.po.TcustomExample">
    delete from tcustom
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hry.po.Tcustom">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into tcustom (customName, userId, userName, 
      envId, envKey, strategy, 
      status, updateTime, intersect
      )
    values (#{customname,jdbcType=VARCHAR}, #{userid,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, 
      #{envid,jdbcType=INTEGER}, #{envkey,jdbcType=VARCHAR}, #{strategy,jdbcType=VARCHAR}, 
      #{status,jdbcType=INTEGER}, #{updatetime,jdbcType=TIMESTAMP}, #{intersect,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.hry.po.Tcustom">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into tcustom
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="customname != null">
        customName,
      </if>
      <if test="userid != null">
        userId,
      </if>
      <if test="username != null">
        userName,
      </if>
      <if test="envid != null">
        envId,
      </if>
      <if test="envkey != null">
        envKey,
      </if>
      <if test="strategy != null">
        strategy,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="updatetime != null">
        updateTime,
      </if>
      <if test="intersect != null">
        intersect,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="customname != null">
        #{customname,jdbcType=VARCHAR},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="envid != null">
        #{envid,jdbcType=INTEGER},
      </if>
      <if test="envkey != null">
        #{envkey,jdbcType=VARCHAR},
      </if>
      <if test="strategy != null">
        #{strategy,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="updatetime != null">
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="intersect != null">
        #{intersect,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hry.po.TcustomExample" resultType="java.lang.Long">
    select count(*) from tcustom
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tcustom
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.customname != null">
        customName = #{record.customname,jdbcType=VARCHAR},
      </if>
      <if test="record.userid != null">
        userId = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.username != null">
        userName = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.envid != null">
        envId = #{record.envid,jdbcType=INTEGER},
      </if>
      <if test="record.envkey != null">
        envKey = #{record.envkey,jdbcType=VARCHAR},
      </if>
      <if test="record.strategy != null">
        strategy = #{record.strategy,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.updatetime != null">
        updateTime = #{record.updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.intersect != null">
        intersect = #{record.intersect,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tcustom
    set id = #{record.id,jdbcType=INTEGER},
      customName = #{record.customname,jdbcType=VARCHAR},
      userId = #{record.userid,jdbcType=INTEGER},
      userName = #{record.username,jdbcType=VARCHAR},
      envId = #{record.envid,jdbcType=INTEGER},
      envKey = #{record.envkey,jdbcType=VARCHAR},
      strategy = #{record.strategy,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      updateTime = #{record.updatetime,jdbcType=TIMESTAMP},
      intersect = #{record.intersect,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hry.po.Tcustom">
    update tcustom
    <set>
      <if test="customname != null">
        customName = #{customname,jdbcType=VARCHAR},
      </if>
      <if test="userid != null">
        userId = #{userid,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        userName = #{username,jdbcType=VARCHAR},
      </if>
      <if test="envid != null">
        envId = #{envid,jdbcType=INTEGER},
      </if>
      <if test="envkey != null">
        envKey = #{envkey,jdbcType=VARCHAR},
      </if>
      <if test="strategy != null">
        strategy = #{strategy,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="updatetime != null">
        updateTime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="intersect != null">
        intersect = #{intersect,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hry.po.Tcustom">
    update tcustom
    set customName = #{customname,jdbcType=VARCHAR},
      userId = #{userid,jdbcType=INTEGER},
      userName = #{username,jdbcType=VARCHAR},
      envId = #{envid,jdbcType=INTEGER},
      envKey = #{envkey,jdbcType=VARCHAR},
      strategy = #{strategy,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      updateTime = #{updatetime,jdbcType=TIMESTAMP},
      intersect = #{intersect,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>